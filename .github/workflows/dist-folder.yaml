# .github/workflows/build-and-release.yml
name: Build and Release React App

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint-build-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: ./frontend
        run: bun install --frozen-lockfile

      - name: Check if lint script exists
        id: check-lint
        working-directory: ./frontend
        run: |
          if grep -q '"lint"' package.json; then
            echo "has_lint=true" >> $GITHUB_OUTPUT
          else
            echo "has_lint=false" >> $GITHUB_OUTPUT
          fi

      - name: Run ESLint
        if: steps.check-lint.outputs.has_lint == 'true'
        working-directory: ./frontend
        run: bun run lint
        continue-on-error: true

      - name: Build React app
        working-directory: ./frontend
        run: bun run build
        env:
          CI: false

      - name: Create version info
        run: |
          echo "Build Date: $(date)" > frontend/dist/build-info.txt
          echo "Commit: ${{ github.sha }}" >> frontend/dist/build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> frontend/dist/build-info.txt

      - name: Compress dist folder
        run: |
          cd frontend/dist
          zip -r ../../smart-task-planner-${{ github.sha }}.zip .
          cd ../..

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build-${{ github.sha }}
          path: smart-task-planner-${{ github.sha }}.zip
          retention-days: 30

      - name: Create Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: smart-task-planner-${{ github.sha }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Artifact Registry (Optional)
        if: startsWith(github.ref, 'refs/tags/v')
        working-directory: ./frontend
        run: |
          echo "To upload to artifact registry like JFrog Artifactory, Bun registry, or similar:"
          echo "Configure the appropriate credentials and upload commands here"
          echo "Example for npm/Bun registry:"
          echo "bun publish dist/"
          # Uncomment and configure as needed:
          # bun pm trust https://your-registry.com
          # echo "//your-registry.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          # bun publish dist/
